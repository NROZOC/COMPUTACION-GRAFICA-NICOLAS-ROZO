 <!DOCTYPE html>
<html>
  <head>
    <title> CARA POLIGONAL </title>
    <style>
      html, body { margin: 0; padding: 0; overflow: hidden; }
    </style>
  </head>
  <body>
    <script src="js/three.js"></script>
	<script src="js/controls/OrbitControls.js"></script>
    <script>
		var scene, aspect, camera, renderer, controls;
		var startTime = Date.now();
		var fan;
		var strip;
		var tapa;
		
		class TRIANGLE_FAN{	
		  constructor( Geometria ){
		    this.geometria = Geometria;
			console.log(this.geometria);
		  }  
		  draw(){			
			for( var i=2; i<this.geometria.vertices.length; i++ ){
			  this.geometria.faces.push( new THREE.Face3(0,i-1,i) );
			}
			this.geometria.computeFaceNormals();
			var materialFan = new THREE.MeshBasicMaterial( { color: 0x000000, side:THREE.DoubleSide } );
			var fan = new THREE.Mesh( this.geometria, materialFan );
			scene.add( fan );
		  }
		}
		
		class TRIANGLE_STRIP{	
		  constructor( Geometria ){
		    this.geometria = Geometria;
			console.log(this.geometria);
		  }  
		  draw(){			
			for( var i=2; i<this.geometria.vertices.length; i++ ){
			  this.geometria.faces.push( new THREE.Face3(i-2,i-1,i) );
			}
			this.geometria.computeFaceNormals();
			var materialStrip = new THREE.MeshBasicMaterial( { color: 0x3333DD, side:THREE.DoubleSide } );
			var strip = new THREE.Mesh( this.geometria, materialStrip );
			scene.add( strip );
		  }
		}
		
		
		init();
		animate();
	
		function init() {
			scene = new THREE.Scene();
			aspect = window.innerWidth / window.innerHeight;
			camera = new THREE.PerspectiveCamera(45, aspect, 0.1, 1000);
			renderer = new THREE.WebGLRenderer();
			renderer.setClearColor(0xF4F4E7);
			renderer.setSize(window.innerWidth, window.innerHeight);
			document.body.appendChild(renderer.domElement);
			controls = new THREE.OrbitControls(camera, renderer.domElement);

			var size = 20;
			var arrowSize = 1;
			var divisions = size;
			var origin = new THREE.Vector3(0, 0, 0);
			var x = new THREE.Vector3(1, 0, 0);
			var y = new THREE.Vector3(0, 1, 0);
			var z = new THREE.Vector3(0, 0, 1);
			var color1 = new THREE.Color(0xFFFFFF);
			var color2 = new THREE.Color(0x333333);
			var colorR = new THREE.Color(0xAA3333);
			var colorG = new THREE.Color(0x33AA33);
			var colorB = new THREE.Color(0x333366);

			//CREAR LAS GRILLAS PARA EL ESCENARIO
			var axesHelper = new THREE.AxesHelper(size);
			var gridHelperXY = new THREE.GridHelper(size, divisions, color1, color1);
			var gridHelperXZ = new THREE.GridHelper(size, divisions, color2, color2);
			var gridHelperYZ = new THREE.GridHelper(size, divisions, color2, color2);

			//ROTARLAS PARA QUE QUEDEN EN EL ESPACIO ADECUADO
			gridHelperXY.rotateOnWorldAxis(x, THREE.Math.degToRad(90));
			gridHelperXZ.rotateOnWorldAxis(y, THREE.Math.degToRad(90));
			gridHelperYZ.rotateOnWorldAxis(z, THREE.Math.degToRad(90));

			//CREAR LAS FLECHAS QUE INDICAN LOS EJES DE COORDENADAS 3D
			var arrowX = new THREE.ArrowHelper(x, origin, arrowSize, colorR);
			var arrowY = new THREE.ArrowHelper(y, origin, arrowSize, colorG);
			var arrowZ = new THREE.ArrowHelper(z, origin, arrowSize, colorB);

			//CREAR ILUMINACIÓN
			var ambient = new THREE.AmbientLight(0xffffff, 2);
			scene.add(ambient);

			var pointLight = new THREE.PointLight(0xffffff, 1, 100);
			pointLight.position.set(5, 5, -5);
			scene.add(pointLight);

			//CREAR LAS GEOMETRÍAS

			//Punto
			var punto0 = new THREE.Vector3(2.5, 1.2, -0.5);
            var punto1 = new THREE.Vector3(-2.5, 1.2, -0.5);
			var geometria = new THREE.Geometry();
			var geometria2 = new THREE.Geometry();
			var radio = 0.5;
			var res = 20.0;
			geometria.vertices.push(punto0);
            geometria2.vertices.push(punto1);

			//pupilas

			for (var i = 0; i <= res; i++){
				var punto = new THREE.Vector3();
                var punto2 = new THREE.Vector3();
				punto.x = (radio * Math.cos((2 * Math.PI * i) / res)) + 2.5;
				punto.y = 1.2;
				punto.z = (radio * Math.sin((2 * Math.PI * i) / res)) - 0.5;
                punto2.x = (radio * Math.cos((2 * Math.PI * i) / res)) - 2.5;
				punto2.y = 1.2;
                punto2.z = (radio * Math.sin((2 * Math.PI * i) / res)) - 0.5;
				geometria.vertices.push(punto);	
                geometria2.vertices.push(punto2);	
			}

            strip = new TRIANGLE_FAN(geometria);
			strip.draw();

            strip = new TRIANGLE_FAN(geometria2);
            strip.draw();



            var geoTriangulo = new THREE.Geometry();
            var geoTriangulo2 = new THREE.Geometry();
            var geoTriangulo3 = new THREE.Geometry();
			var geoTriangulo4 = new THREE.Geometry();
            var geoTriangulo5 = new THREE.Geometry();
            var geoTriangulo6 = new THREE.Geometry();
            var geoTriangulo7 = new THREE.Geometry();
            var geoTriangulo8 = new THREE.Geometry();
			var geoTriangulo9 = new THREE.Geometry();
            var geoTriangulo10 = new THREE.Geometry();
            var geoTriangulo11 = new THREE.Geometry();
            var geoTriangulo12 = new THREE.Geometry();
            var geoTriangulo13 = new THREE.Geometry();
			var geoTriangulo14 = new THREE.Geometry();
            var geoTriangulo15 = new THREE.Geometry();
            var geoTriangulo16 = new THREE.Geometry();
            var geoTriangulo17 = new THREE.Geometry();
			var geoTriangulo18 = new THREE.Geometry();
            var geoTriangulo19 = new THREE.Geometry();
			var geoTriangulo20 = new THREE.Geometry();
            var geoTriangulo21 = new THREE.Geometry();
            var geoTriangulo22 = new THREE.Geometry();
            var geoTriangulo23 = new THREE.Geometry();
            var geoTriangulo24 = new THREE.Geometry();
            var geoTriangulo25 = new THREE.Geometry();
            var geoTriangulo26 = new THREE.Geometry();
            var geoTriangulo27 = new THREE.Geometry();
            var geoTriangulo28 = new THREE.Geometry();
            var geoTriangulo29 = new THREE.Geometry();
            var geoTriangulo30 = new THREE.Geometry();
            var geoTriangulo31 = new THREE.Geometry();
            var geoTriangulo32 = new THREE.Geometry();
            var geoTriangulo33 = new THREE.Geometry();
            var geoTriangulo34 = new THREE.Geometry();
            var geoTriangulo35 = new THREE.Geometry();
            var geoTriangulo36 = new THREE.Geometry();
            var geoTriangulo37 = new THREE.Geometry();
            var geoTriangulo38 = new THREE.Geometry();
            var geoTriangulo39 = new THREE.Geometry();
            var geoTriangulo40 = new THREE.Geometry();


			//VERTICES

            var v1 = new THREE.Vector3(0, -1, 5);
            var v2 = new THREE.Vector3(6, 1, 3);
            var v3 = new THREE.Vector3(4, 1, -6);
            var v4 = new THREE.Vector3(0, -1, -9);
            var v5 = new THREE.Vector3(-4, 1, -6);
			var v6 = new THREE.Vector3(-6, 1, 3);
            var v7 = new THREE.Vector3(0, -4, 3);
            var v8 = new THREE.Vector3(0, -2, -6);
			var v9 = new THREE.Vector3(0, -1, -8);
            var v10 = new THREE.Vector3(-4, 1.1, 1);
            var v11 = new THREE.Vector3(-1, 1.1, 0);
            var v12 = new THREE.Vector3(-1, 1.1, -1);
            var v13 = new THREE.Vector3(-4, 1.1, -1);
            var v14 = new THREE.Vector3(1, 1.1, 0);
            var v15 = new THREE.Vector3(4, 1.1, 1);
            var v16 = new THREE.Vector3(4, 1.1, -1);
			var v17 = new THREE.Vector3(1, 1.1, -1);
            var v18 = new THREE.Vector3(-1.5, 1.1, -3.5);
            var v19 = new THREE.Vector3(1.5, 1.1, -3.5);
            var v20 = new THREE.Vector3(1.5, 1.1, -2.8);
			var v21 = new THREE.Vector3(-1.5, 1.1, -2.5);
            var v22 = new THREE.Vector3(0, 2.5, -2);
            var v23 = new THREE.Vector3(-1, 1.1, -2);
            var v24 = new THREE.Vector3(1, 1.1, -2);
            var v25 = new THREE.Vector3(-6, 0.9, -0.5);
            var v26 = new THREE.Vector3(-3, 0.4, -2);
            var v27 = new THREE.Vector3(-3, 0.4, -3);
            var v28 = new THREE.Vector3(-6, 0.4, -2.5);
            var v29 = new THREE.Vector3(6, 0.9, -0.5);
            var v30 = new THREE.Vector3(6, 0.4, -2.5);
            var v31 = new THREE.Vector3(4, 0.4, -3);
            var v32 = new THREE.Vector3(3, 0.4, -2);
            var v33 = new THREE.Vector3(0, 1.4, 2.4);
            var v34 = new THREE.Vector3(-2, 1, 3);
            var v35 = new THREE.Vector3(2, 1, 3);
            var v36 = new THREE.Vector3(0, 1.4, 8);
            var v37 = new THREE.Vector3(1.2, -4, 8);
            var v38 = new THREE.Vector3(-1.2, -4, 8);
            var v39 = new THREE.Vector3(-1.2, -6, -2);
            var v40 = new THREE.Vector3(1.2, -6, -2);


//cara

            geoTriangulo.vertices.push(v1);
            geoTriangulo.vertices.push(v6);
			geoTriangulo.vertices.push(v2);

            geoTriangulo2.vertices.push(v6);
            geoTriangulo2.vertices.push(v5);
			geoTriangulo2.vertices.push(v2);

            geoTriangulo3.vertices.push(v5);
            geoTriangulo3.vertices.push(v3);
			geoTriangulo3.vertices.push(v2);

            geoTriangulo4.vertices.push(v5);
            geoTriangulo4.vertices.push(v4);
			geoTriangulo4.vertices.push(v3);

            geoTriangulo5.vertices.push(v1);
            geoTriangulo5.vertices.push(v2);
			geoTriangulo5.vertices.push(v7);

            geoTriangulo6.vertices.push(v2);
            geoTriangulo6.vertices.push(v8);
			geoTriangulo6.vertices.push(v7);

            geoTriangulo7.vertices.push(v8);
            geoTriangulo7.vertices.push(v3);
            geoTriangulo7.vertices.push(v2);

            geoTriangulo8.vertices.push(v3);
            geoTriangulo8.vertices.push(v4);
            geoTriangulo8.vertices.push(v8);

            geoTriangulo9.vertices.push(v4);
            geoTriangulo9.vertices.push(v9);
			geoTriangulo9.vertices.push(v8);

            geoTriangulo10.vertices.push(v7);
            geoTriangulo10.vertices.push(v1);
            geoTriangulo10.vertices.push(v6);

            geoTriangulo11.vertices.push(v6);
            geoTriangulo11.vertices.push(v8);
            geoTriangulo11.vertices.push(v7);

            geoTriangulo12.vertices.push(v6);
            geoTriangulo12.vertices.push(v5);
            geoTriangulo12.vertices.push(v8);

            geoTriangulo13.vertices.push(v5);
            geoTriangulo13.vertices.push(v4);
            geoTriangulo13.vertices.push(v8);

            geoTriangulo14.vertices.push(v4);
            geoTriangulo14.vertices.push(v9);
			geoTriangulo14.vertices.push(v8);

//ojos

            geoTriangulo15.vertices.push(v11);
            geoTriangulo15.vertices.push(v10);
            geoTriangulo15.vertices.push(v13);

            geoTriangulo16.vertices.push(v13);
            geoTriangulo16.vertices.push(v12);
            geoTriangulo16.vertices.push(v11);

            geoTriangulo17.vertices.push(v16);
            geoTriangulo17.vertices.push(v15);
            geoTriangulo17.vertices.push(v14);

            geoTriangulo18.vertices.push(v14);
            geoTriangulo18.vertices.push(v17);
			geoTriangulo18.vertices.push(v16);

//boca

            geoTriangulo19.vertices.push(v20);
            geoTriangulo19.vertices.push(v19);
            geoTriangulo19.vertices.push(v18);

            geoTriangulo20.vertices.push(v18);
            geoTriangulo20.vertices.push(v21);
			geoTriangulo20.vertices.push(v20);

//nariz

            geoTriangulo21.vertices.push(v12);
            geoTriangulo21.vertices.push(v22);
            geoTriangulo21.vertices.push(v17);

            geoTriangulo22.vertices.push(v17);
            geoTriangulo22.vertices.push(v22);
            geoTriangulo22.vertices.push(v24);

            geoTriangulo23.vertices.push(v12);
            geoTriangulo23.vertices.push(v23);
            geoTriangulo23.vertices.push(v22);

            geoTriangulo24.vertices.push(v24);
            geoTriangulo24.vertices.push(v22);
            geoTriangulo24.vertices.push(v23);

//orejas

            geoTriangulo25.vertices.push(v26);
            geoTriangulo25.vertices.push(v25);
            geoTriangulo25.vertices.push(v28);

            geoTriangulo26.vertices.push(v28);
            geoTriangulo26.vertices.push(v27);
            geoTriangulo26.vertices.push(v26);

            geoTriangulo27.vertices.push(v29);
            geoTriangulo27.vertices.push(v30);
            geoTriangulo27.vertices.push(v32);

            geoTriangulo28.vertices.push(v32);
            geoTriangulo28.vertices.push(v31);
            geoTriangulo28.vertices.push(v30);

//cabello

            geoTriangulo29.vertices.push(v33);
            geoTriangulo29.vertices.push(v36);
            geoTriangulo29.vertices.push(v34);

            geoTriangulo30.vertices.push(v33);
            geoTriangulo30.vertices.push(v35);
            geoTriangulo30.vertices.push(v36);

            geoTriangulo31.vertices.push(v1);
            geoTriangulo31.vertices.push(v36);
            geoTriangulo31.vertices.push(v35);

            geoTriangulo32.vertices.push(v1);
            geoTriangulo32.vertices.push(v36);
            geoTriangulo32.vertices.push(v34);

            geoTriangulo33.vertices.push(v1);
            geoTriangulo33.vertices.push(v38);
            geoTriangulo33.vertices.push(v37);

            geoTriangulo34.vertices.push(v7);
            geoTriangulo34.vertices.push(v38);
            geoTriangulo34.vertices.push(v1);

            geoTriangulo35.vertices.push(v7);
            geoTriangulo35.vertices.push(v37);
            geoTriangulo35.vertices.push(v1);

            geoTriangulo36.vertices.push(v7);
            geoTriangulo36.vertices.push(v37);
            geoTriangulo36.vertices.push(v38);

            geoTriangulo37.vertices.push(v8);
            geoTriangulo37.vertices.push(v39);
            geoTriangulo37.vertices.push(v7);

            geoTriangulo38.vertices.push(v8);
            geoTriangulo38.vertices.push(v40);
            geoTriangulo38.vertices.push(v7);

            geoTriangulo39.vertices.push(v40);
            geoTriangulo39.vertices.push(v7);
            geoTriangulo39.vertices.push(v39);

            geoTriangulo40.vertices.push(v39);
            geoTriangulo40.vertices.push(v8);
            geoTriangulo40.vertices.push(v40);



           


			geoTriangulo.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo2.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo3.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo4.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo5.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo6.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo7.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo8.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo9.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo10.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo11.faces.push(new THREE.Face3(0, 1, 2));
			geoTriangulo12.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo13.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo14.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo15.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo16.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo17.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo18.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo19.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo20.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo21.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo22.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo23.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo24.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo25.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo26.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo27.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo28.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo29.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo30.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo31.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo32.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo33.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo34.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo35.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo36.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo37.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo38.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo39.faces.push(new THREE.Face3(0, 1, 2));
            geoTriangulo40.faces.push(new THREE.Face3(0, 1, 2));


			geoTriangulo.computeFaceNormals();
			geoTriangulo2.computeFaceNormals();
			geoTriangulo3.computeFaceNormals();
			geoTriangulo4.computeFaceNormals();
			geoTriangulo5.computeFaceNormals();
			geoTriangulo6.computeFaceNormals();
			geoTriangulo7.computeFaceNormals();
			geoTriangulo8.computeFaceNormals();
			geoTriangulo9.computeFaceNormals();
			geoTriangulo10.computeFaceNormals();
			geoTriangulo11.computeFaceNormals();
			geoTriangulo12.computeFaceNormals();
            geoTriangulo13.computeFaceNormals();
            geoTriangulo14.computeFaceNormals();
            geoTriangulo15.computeFaceNormals();
            geoTriangulo16.computeFaceNormals();
            geoTriangulo17.computeFaceNormals();
            geoTriangulo18.computeFaceNormals();
            geoTriangulo19.computeFaceNormals();
            geoTriangulo20.computeFaceNormals();
            geoTriangulo21.computeFaceNormals();
            geoTriangulo22.computeFaceNormals();
            geoTriangulo23.computeFaceNormals();
            geoTriangulo24.computeFaceNormals();
            geoTriangulo25.computeFaceNormals();
            geoTriangulo26.computeFaceNormals();
            geoTriangulo27.computeFaceNormals();
            geoTriangulo28.computeFaceNormals();
            geoTriangulo29.computeFaceNormals();
            geoTriangulo30.computeFaceNormals();
            geoTriangulo31.computeFaceNormals();
            geoTriangulo32.computeFaceNormals();
            geoTriangulo33.computeFaceNormals();
            geoTriangulo34.computeFaceNormals();
            geoTriangulo35.computeFaceNormals();
            geoTriangulo36.computeFaceNormals();
            geoTriangulo37.computeFaceNormals();
            geoTriangulo38.computeFaceNormals();
            geoTriangulo39.computeFaceNormals();
            geoTriangulo40.computeFaceNormals();


			//MATERIAL Y CREACION DEL OBJETO
			var matLinea = new THREE.LineBasicMaterial({ color: 0xFFFFFF });
            var matPlano = new THREE.MeshBasicMaterial({ color: 0x99807C, side: THREE.DoubleSide });  //piel oscuro
			var matPlano2 = new THREE.MeshBasicMaterial({ color: 0xF6CDC6, side: THREE.DoubleSide });   //piel claro
            var matPlano3 = new THREE.MeshBasicMaterial({ color: 0xC8A49E, side: THREE.DoubleSide });   //piel medio
			var matPlano4 = new THREE.MeshBasicMaterial({ color: 0xFFFFFF, side: THREE.DoubleSide });
            var matPlano5 = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.DoubleSide });
            var matPlano6 = new THREE.MeshBasicMaterial({ color: 0xE5C0B9, side: THREE.DoubleSide });


            var triangulo = new THREE.Mesh(geoTriangulo, matPlano3);
            var triangulo2 = new THREE.Mesh(geoTriangulo2, matPlano2);
            var triangulo3 = new THREE.Mesh(geoTriangulo3, matPlano2);
            var triangulo4 = new THREE.Mesh(geoTriangulo4, matPlano3);
            var triangulo5 = new THREE.Mesh(geoTriangulo5, matPlano);
            var triangulo6 = new THREE.Mesh(geoTriangulo6, matPlano);
            var triangulo7 = new THREE.Mesh(geoTriangulo7, matPlano);
            var triangulo8 = new THREE.Mesh(geoTriangulo8, matPlano);
			var triangulo9 = new THREE.Mesh(geoTriangulo9, matPlano);
            var triangulo10 = new THREE.Mesh(geoTriangulo10, matPlano);
            var triangulo11 = new THREE.Mesh(geoTriangulo11, matPlano);
            var triangulo12 = new THREE.Mesh(geoTriangulo12, matPlano);
            var triangulo13 = new THREE.Mesh(geoTriangulo13, matPlano);
			var triangulo14 = new THREE.Mesh(geoTriangulo14, matPlano);
            var triangulo15 = new THREE.Mesh(geoTriangulo15, matPlano4);
            var triangulo16 = new THREE.Mesh(geoTriangulo16, matPlano4);
            var triangulo17 = new THREE.Mesh(geoTriangulo17, matPlano4);
			var triangulo18 = new THREE.Mesh(geoTriangulo18, matPlano4);
            var triangulo19 = new THREE.Mesh(geoTriangulo19, matPlano5);
            var triangulo20 = new THREE.Mesh(geoTriangulo20, matPlano4);
            var triangulo21 = new THREE.Mesh(geoTriangulo21, matPlano6);
            var triangulo22 = new THREE.Mesh(geoTriangulo22, matPlano3);
            var triangulo23 = new THREE.Mesh(geoTriangulo23, matPlano3);
            var triangulo24 = new THREE.Mesh(geoTriangulo24, matPlano);
            var triangulo25 = new THREE.Mesh(geoTriangulo25, matPlano6);
            var triangulo26 = new THREE.Mesh(geoTriangulo26, matPlano3);
            var triangulo27 = new THREE.Mesh(geoTriangulo27, matPlano6);
            var triangulo28 = new THREE.Mesh(geoTriangulo28, matPlano3);
            var triangulo29 = new THREE.Mesh(geoTriangulo29, matPlano5);
            var triangulo30 = new THREE.Mesh(geoTriangulo30, matPlano5);
            var triangulo31 = new THREE.Mesh(geoTriangulo31, matPlano5);
            var triangulo32 = new THREE.Mesh(geoTriangulo32, matPlano5);
            var triangulo33 = new THREE.Mesh(geoTriangulo33, matPlano5);
            var triangulo34 = new THREE.Mesh(geoTriangulo34, matPlano5);
            var triangulo35 = new THREE.Mesh(geoTriangulo35, matPlano5);
            var triangulo36 = new THREE.Mesh(geoTriangulo36, matPlano5);
            var triangulo37 = new THREE.Mesh(geoTriangulo37, matPlano5);
            var triangulo38 = new THREE.Mesh(geoTriangulo38, matPlano5);
            var triangulo39 = new THREE.Mesh(geoTriangulo39, matPlano5);
            var triangulo40 = new THREE.Mesh(geoTriangulo40, matPlano5);
            
			
			
		  	//AGREGAR A LA ESCENA

			scene.add(triangulo);
			scene.add(triangulo2);
			scene.add(triangulo3);
            scene.add(triangulo4);
            scene.add(triangulo5);
			scene.add(triangulo6);
            scene.add(triangulo7);
            scene.add(triangulo8);
            scene.add(triangulo9);
			scene.add(triangulo10);
            scene.add(triangulo11);
			scene.add(triangulo12);
            scene.add(triangulo13);
            scene.add(triangulo14);
            scene.add(triangulo15);
            scene.add(triangulo16);
            scene.add(triangulo17);
            scene.add(triangulo18);
            scene.add(triangulo19);
            scene.add(triangulo20);
            scene.add(triangulo21);
            scene.add(triangulo22);
            scene.add(triangulo23);
            scene.add(triangulo24);
            scene.add(triangulo25);
            scene.add(triangulo26);
            scene.add(triangulo27);
            scene.add(triangulo28);
            scene.add(triangulo29);
            scene.add(triangulo30);
            scene.add(triangulo31);
            scene.add(triangulo32);
            scene.add(triangulo33);
            scene.add(triangulo34);
            scene.add(triangulo35);
            scene.add(triangulo36);
            scene.add(triangulo37);
            scene.add(triangulo38);
            scene.add(triangulo39);
            scene.add(triangulo40);
			scene.add(geometria);
			scene.add(geometria2);
 //         scene.add( gridHelperXZ );
		  	scene.add( arrowX );	
		  	scene.add( arrowY );	
		  	scene.add( arrowZ );
			
			camera.position.x = 0;
			camera.position.y = 25;	 
		  	camera.position.z = -1;

			camera.lookAt(origin);

        }
    
    function animate() {
        render();
		controls.update(); // required if controls.enableDamping = true, or if controls.autoRotate = true
        requestAnimationFrame( animate );
    }
    
    function render(){
        renderer.render( scene, camera );
    }
    </script>
  </body>
</html>
